---
description: 
globs: 
alwaysApply: true
---
# Chart System Guide

## Chart Selection Logic
The chart selection system in [pages/1_Cortex_Analyst.py](mdc:pages/1_Cortex_Analyst.py) follows a 3-step process to determine the best visualization:

### Step 1: Check for Geospatial Data (Highest Priority)
First, the system checks if the data contains latitude and longitude columns:
- Looks for columns with names containing 'lat', 'latitude', 'lon', 'longitude' (case insensitive)
- Validates the values are within appropriate coordinate ranges (-90 to 90 for latitude, -180 to 180 for longitude)
- If valid geospatial data is found, creates **Chart 11** (Geospatial Map)

### Step 2: Try All Other Chart Types Based on Column Structure
If no geospatial visualization was created or it failed, the system evaluates the data structure to find the most appropriate chart type:



When SQL is run by the prompt and data is returned, you will inspect the results and count how many columns are text vs date vs numeric fields.  

Follow the chart logic below starting from the top. If you meet the requirements and can produce a chart, then you can break and don't need to check further rules:
Check #1. Is there a latitude and longitude column?  (Y/N)
    If Y, produce  **Chart 11**: - Geospatial Map 
    If N, check further rules

Check #2. Is there a single row of data with 1 to four numeric columns?  (Y/N)
    If Y, produce  **Chart 10**: KPI Tiles
    If N, check further rules

Check #3 Is there exactly one date column? (Y/N)
    If Y (i.e. there is a date column) then: 
      a) If there is a single numeric column (1), produce **Chart 1**: Line/Bar Chart by Date
      b) If there is a two numeric columns (2) - **Chart 2**: Dual Axis Line Chart
      c) If there is a single numeric column (1) and one text columns, produce **Chart 3**: → Stacked Bar Chart by Date
      d)If there are multiple text columns (2+), one numeric column (1), produce  **Chart 4**: → Stacked Bar with Column Selector
      e) For other combinaations of text and numeric counts, inform the user no chart can be produced and exit logic
    If N (i.e. there is no date column) then:
      a) If there is one text column (1) and two numeric columns (2), produce  **Chart 5**: → Scatter Plot
      b) If there are two text columns (2) and two numeric columns (2), produce  **Chart 6**:   → Multi-Dimension Scatter
      c) If there is one text column (1) and three numeric columns (3), produce **Chart 7**:  → Bubble Chart
      d) If there are multiple text columns (2+) and multiple numeric columns (3+), produce **Chart 8**:  → Multi-Dimension Bubble
      e) If there are any number of text columns (1+) and one numeric column (1), produce **Chart 9**:  → Bar Chart with Selectors
      f) - For other combinaations of text and numeric counts, inform the user no chart can be produced
End of Logic - if a chart did not fall into any of the rules above then inform the user no chart can be produced


### Step 3: Display the Appropriate Visualization
Once a chart is created successfully, the system:
1. Renders the appropriate visualization (map, chart, or KPI tiles)
2. Shows the correct "Open in Designer" or "Open in Map Designer" button
3. Prepares data transfer for the appropriate designer page

## Geospatial Map Features (Chart 11)
The geospatial map visualization in [utils/chart_utils.py](mdc:utils/chart_utils.py) provides:

- 3D hexagon-based aggregation of geospatial point data
- Automatic selection of a metric column for visualization
- Color-coded hexagons based on metric values
- Interactive tooltips showing value and count

The **Map Designer** page allows users to:
- Select up to three metrics to display on the map
- Choose color schemes for each metric
- Adjust hexagon size (H3 resolution)
- Control hexagon height and opacity
- Save the customized map as a report

